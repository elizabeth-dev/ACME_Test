// Code generated by mockery v2.14.0. DO NOT EDIT.

package handler_mocks

import (
	"context"

	"github.com/elizabeth-dev/ACME_Test/internal/app/users/app/command"

	"github.com/stretchr/testify/mock"
)

// IUpdateUserHandler is an autogenerated mock type for the IUpdateUserHandler type
type IUpdateUserHandler struct {
	mock.Mock
}

// Handle provides a mock function with given fields: ctx, cmd
func (_m *IUpdateUserHandler) Handle(ctx context.Context, cmd command.UpdateUser) error {
	ret := _m.Called(ctx, cmd)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, command.UpdateUser) error); ok {
		r0 = rf(ctx, cmd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIUpdateUserHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewIUpdateUserHandler creates a new instance of IUpdateUserHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIUpdateUserHandler(t mockConstructorTestingTNewIUpdateUserHandler) *IUpdateUserHandler {
	mock := &IUpdateUserHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

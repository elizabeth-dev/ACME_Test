// Code generated by mockery v2.14.0. DO NOT EDIT.

package handler_mocks

import (
	"context"

	"github.com/stretchr/testify/mock"
)

// IRemoveUserHandler is an autogenerated mock type for the IRemoveUserHandler type
type IRemoveUserHandler struct {
	mock.Mock
}

// Handle provides a mock function with given fields: ctx, userId
func (_m *IRemoveUserHandler) Handle(ctx context.Context, userId string) error {
	ret := _m.Called(ctx, userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIRemoveUserHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewIRemoveUserHandler creates a new instance of IRemoveUserHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRemoveUserHandler(t mockConstructorTestingTNewIRemoveUserHandler) *IRemoveUserHandler {
	mock := &IRemoveUserHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
